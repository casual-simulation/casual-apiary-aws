service: 'casual-apiary-aws'
org: 'kallyngowdy'
app: 'casual-apiary'

frameworkVersion: '2'

# Setup webpack
custom:
    webpack:
        webpackConfig: './webpack.config.js'
        includeModules: true

# Add the serverless-webpack plugin
plugins: ['serverless-webpack']

provider:
    name: aws
    runtime: nodejs12.x
    profile: casualsimulation
    apiGateway:
        shouldStartNameWithService: true
        minimumCompressionSize: 1024
    environment:
        AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
    iamRoleStatements:
        - Effect: Allow
          Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
          Resource: 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/AtomsTable'

functions:
    hello:
        handler: handler.hello
        events:
            - http:
                  method: get
                  path: hello
    write:
        handler: handler.write
        events:
            - http:
                  method: post
                  path: write

resources:
    Resources:
        AtomsTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: AtomsTable
                AttributeDefinitions:
                    - AttributeName: namespace
                      AttributeType: S
                    - AttributeName: atomId
                      AttributeType: S
                KeySchema:
                    - AttributeName: namespace
                      KeyType: HASH
                    - AttributeName: atomId
                      KeyType: RANGE
                ProvisionedThroughput:
                    ReadCapacityUnits: 1
                    WriteCapacityUnits: 1
